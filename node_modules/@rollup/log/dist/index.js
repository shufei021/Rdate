"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = require("chalk");
const loglevelnext_1 = require("loglevelnext");
const v4_1 = require("uuid/v4");
const StdErrorFactory_1 = require("./StdErrorFactory");
const colors = {
    trace: chalk_1.default `{cyan ⓡ} `,
    debug: chalk_1.default `{magenta ⓡ  debug:}`,
    info: chalk_1.default `{blue ⓡ} `,
    warn: chalk_1.default `{yellow ⓡ} `,
    error: chalk_1.default `{red ⓡ} `,
    pass: chalk_1.default `{green ⓡ} `,
    fail: chalk_1.default `{red ⓡ} `
};
const defaults = {
    level: "info" /* info */,
    timestamp: false,
    stderr: ['info', 'warn', 'error', 'pass', 'fail']
};
function logger(opts) {
    const unique = { id: v4_1.default() };
    const options = Object.assign({}, defaults, unique, opts);
    const prefix = {
        level: ({ level }) => colors[level],
        template: `{{level}} ${options.preface || ''}`
    };
    if (options.timestamp) {
        prefix.template = `[{{time}}] ${prefix.template}`;
    }
    if (!options.name) {
        options.name = options.id;
    }
    const log = loglevelnext_1.default.getLogger(options);
    const factory = new StdErrorFactory_1.StdErrorFactory(log, prefix, options.stderr);
    log.factory = factory;
    return log;
}
exports.logger = logger;
function deleteLogger(id) {
    delete loglevelnext_1.default.loggers[id];
}
exports.deleteLogger = deleteLogger;
exports.factories = loglevelnext_1.default.factories;
exports.default = logger;
