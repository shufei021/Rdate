{"version":3,"file":"rdate.js","sources":["../src/index.js"],"sourcesContent":["class Rdate {\r\n    constructor() {\r\n        this.version = \"1.0.1\"\r\n        this.author = 'rookie_fly'\r\n        this.creator ='rookie_fly'\r\n        this.createDate ='2018-07-27'\r\n        this.updateDate = '2020-08-23'\r\n    }\r\n\r\n    /**\r\n     * ---------------核心方法--------------------\r\n     *                                           \r\n     * \r\n     */\r\n\r\n     /**\r\n      * ※ \r\n      * @param  {...any} args :形参，生效的最多为前两个参数\r\n      * 1个参数情况：\r\n      *      1.1 参数为格式，则默认格式化当前时间\r\n      *      1.2 参数为时间戳或字符串时间，则使用默认格式去格式化化给定的 时间戳或字符串时间\r\n      * 2个参数情况：\r\n      * 第一个参数表示格式化的日期，可以是时间戳或字符串时间\r\n      * 第二个参数表示格式\r\n      */\r\n     format(...args) {\r\n        // 解构参数，声明格式\r\n        let [a,b] = args,dt,format\r\n        // 如果没有传入参数，时间默认是当前时间，格式是默认格式\r\n        if(!args.length){\r\n            dt = new Date()\r\n            format = 'yyyy-MM-dd hh:mm:ss'\r\n        }else if(args.length==1){//如果只传入一个参数的情况，分两种情况进行检测\r\n            if(isNaN (new Date(a).valueOf())){//第一种情况：输入的是格式字符串，格式则使用传入的第一个参数作为格式，时间为默认时间\r\n                format = a\r\n                dt = new Date()\r\n            }else{//第二种情况：输入的时间字符串 或 时间戳，可以被解析，则时间就使用传入的第一个参数作为时间，格式使用默认格式\r\n                dt = new Date(typeof a == 'string'?a.replace(/-/g,'/'):a)\r\n                format = 'yyyy-MM-dd hh:mm:ss'\r\n            }\r\n        }else if(args.length>=2){//参数大于等于2时，第一个参数赋予时间，第二个参数赋予格式\r\n            dt = new Date(typeof a == 'string'?a.replace(/-/g,'/'):a)\r\n            format = b\r\n        }\r\n        // 时间补位对象\r\n        let ret = {\r\n            \"y+\": String(dt.getFullYear()),\r\n            \"M+\": String((dt.getMonth() + 1)).padStart(2, 0),\r\n            \"d+\": String(dt.getDate()).padStart(2, 0),\r\n            \"h+\": String(dt.getHours()).padStart(2, 0),\r\n            \"m+\": String(dt.getMinutes()).padStart(2, 0),\r\n            \"s+\": String(dt.getSeconds()).padStart(2, 0)\r\n        }\r\n\r\n        /**\r\n         * 标记并缓存模板内容\r\n         */\r\n        let mapVal = [] \r\n        format = format.replace(/\\[(.+?)\\]/g,function(a){\r\n            mapVal.push(a.slice(1,-1))\r\n            return \"|\"\r\n        })\r\n\r\n        /**\r\n         * 星期替换\r\n         */\r\n        if(format.includes('w')){\r\n            format = format.replace(/((w)+)/g, () => this.week(dt))\r\n        }\r\n\r\n        /**\r\n         * 时辰替换\r\n         */\r\n        if(format.includes('t')){\r\n            format = format.replace(/((t)+)/g, () => this.when(dt))\r\n            \r\n        }\r\n        /**\r\n         * 开始进行正常的时间格式替换\r\n         */\r\n        for (let k in ret) {\r\n            if (format.includes(k.substr(0, 1))) {\r\n                format = format.replace(new RegExp(k, \"g\"), a=>ret[k].substr(0, a.length))\r\n            }\r\n        }\r\n        \r\n        /**\r\n         * 模板字符串处理\r\n         */\r\n        let formatArr = format.split('|')\r\n        let res  = ''\r\n        for(let i=0;i<formatArr.length;i++){\r\n            res += (formatArr[i]+mapVal[i])\r\n        }\r\n\r\n        /** \r\n         * 处理特殊情况\r\n        */\r\n        if((res+' ').slice(-10,-1)==='undefined' && formatArr[formatArr.length-1]!=='|'){\r\n            res = res.slice(0,-9)\r\n        }\r\n        // 返回处理的结果\r\n        return res\r\n    }\r\n\r\n    /**\r\n     * ※ \r\n     * Rdate 的静态方法\r\n     * 用于 根据参数获取时间 的兼容：输入日期\r\n     * 第1种情况：用户没有传参数，即 dt === undefined，此时返回当前日期时间\r\n     * 第2种情况：用户传参数不符合规定（标准的时间戳和日期），此时返回当前日期时间\r\n     * 第3种情况：用户传参数符合规定（标准的时间戳和日期），此时返回给定日期\r\n     */\r\n    static _dt(dt){\r\n        return dt?new Date(typeof dt == 'string' && dt.indexOf('-')>-1?dt.replace(/-/g,'/'):dt):new Date()\r\n    }\r\n\r\n    /**\r\n     * 前后 中括号是否配对\r\n     * @param { String } str : 带 中括号的字符串\r\n     * @param { Number } index ：查找开始的索引\r\n     */\r\n    static isMatch(str,index){\r\n        // 往后查找 ]\r\n        let index1 = str.indexOf('[',index)\r\n        let index2 = str.indexOf(']',index)//肯定不能为 -1\r\n        // 往前查找 [\r\n        let index3 = str.lastIndexOf('[',index)//肯定不能为 -1\r\n        let index4 = str.lastIndexOf(']',index)\r\n        if(index2>-1 && index3>-1){\r\n            if(index1==-1 && index4==-1){\r\n                return true\r\n            }else{\r\n                if(index1>-1 &&  index4==-1){\r\n                    return index3<index4\r\n                }else {\r\n                    return  index2<index1\r\n                }\r\n            }\r\n        }\r\n        return  false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     *                                           \r\n     * ---------------核心方法--------------------\r\n     */\r\n\r\n\r\n\r\n     /**\r\n      * --------------时间戳相关-------------------start----------------------------------------------\r\n      */\r\n\r\n    /**\r\n     * ※ \r\n     * 获取 （给定日期 | 当前日期） 前进（+）后退（-）n 天后的时间戳\r\n     * @param { Number } n : 前进（+）后退（-）n 天后的时间戳，不传默认是0，当天\r\n     * @param { String } dt : 给定日期\r\n     */\r\n\r\n    getStamp(dt,n){\r\n        let a = arguments\r\n        if(!a.length) return new Date().getTime()\r\n        // 如果只有 一个参数,则视为对当前时间的加减\r\n        if(a.length==1 && typeof a[0] === \"number\"){\r\n            n = a[0]\r\n            dt = undefined\r\n        }\r\n        let d=Rdate._dt(dt)\r\n        d.setDate(d.getDate() + (n === undefined ? 0 : n))\r\n        return +d\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 获取基于 （给定日期/当前时间） 的 前一天/后一天的时间戳\r\n     * @param  { String } dt : 给定日期\r\n     */\r\n    getStampBeforAfter(dt) {\r\n        let d = Rdate._dt(dt),b,a \r\n        d.setDate(d.getDate()-1)\r\n        b=+d\r\n        d.setDate(d.getDate()+2)\r\n        a = +d\r\n        return {before:b,after:a}   \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 定日期/今日 起止日期时间（00：00：00 ~ 23：59：59）\r\n     * @param { String } dt: 给定日期\r\n     */\r\n    getStampStartEnd(dt) {\r\n        let d = Rdate._dt(dt)\r\n        return {\r\n            start:+new Date(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0) ,\r\n            end:+new Date(d.getFullYear(),d.getMonth(),d.getDate(),23,59,59)\r\n        } \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 获取两个时间戳相差多少天\r\n     * @param { Number } stamp1 ：时间戳\r\n     * @param { Number } stamp2 ：时间戳\r\n     */\r\n    getDaysByStamp(stamp1, stamp2) {\r\n        return parseInt(Math.abs(stamp1 - stamp2) / 86400000)\r\n    }\r\n\r\n      /**\r\n      * --------------时间戳相关-------------------end----------------------------------------------\r\n      */\r\n\r\n\r\n     /**\r\n      * --------------时间信息相关-------------------start----------------------------------------------\r\n      */\r\n\r\n    /**\r\n     * ※ \r\n     * 本周第一天\r\n     * @param { String } format ：格式，默认 yyyy-MM-dd\r\n     */\r\n    getCurWeekFirstDay() {\r\n        let d = new Date();\r\n        let f = new Date(d - (d.getDay() - 1) * 86400000);\r\n        return this.format(f,'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n     /**\r\n      * ※ \r\n     * 本周最后一天\r\n     */\r\n    getCurWeekLastDay() {\r\n        let d = new Date(this.getCurWeekFirstDay()+' 00:00:00')\r\n        d.setDate(d.getDate()+6)\r\n        return this.format(d,'yyyy-MM-dd') \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 任一月份第一天\r\n     */\r\n    getMonthFirstDay(dt) {\r\n        let d = Rdate._dt(dt)\r\n        return this.format(d,'yyyy-MM-')+'01'\r\n    }\r\n\r\n    /**\r\n     * ※ \r\n     * 任一月份最后一天\r\n     * @param { String | Number} dt ：日期 或 时间戳\r\n     */\r\n    getMonthLastDay(dt) {\r\n        let d = Rdate._dt(dt)\r\n        d.setMonth(d.getMonth() + 1)//月份+1\r\n        d.setDate(1)//日设置成1号\r\n        d.setDate(d.getDate() -1)//倒退1日到当前月末最后一天\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 获取两个日期相差多少天\r\n     * @param {String | Number} d1 ：日期 或 时间戳\r\n     * @param {String | Number} d2 ：日期 或 时间戳\r\n     */\r\n    getDaysByDate(d1, d2) {\r\n        return parseInt(Math.abs(new Date(d1) - new Date(d2)) / 86400000)\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 获取 （给定日期 | 当前日期）为基准的 半年之前的日期\r\n     * @param { String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getHalfYear(dt) {\r\n        return this.format(new Date(Rdate._dt(dt)-15768000000),'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * ※ \r\n     * 距 （给定日期|当前日期） n 年 的日期\r\n     * @param { Number } n ：前进（+） 后退（-）n 年后的日期\r\n     * @param { String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getGapYearDate(n=0,dt) {\r\n        let d = Rdate._dt(dt);\r\n        d.setFullYear(d.getFullYear() + n);\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n    /**\r\n     * ※ \r\n     * 距 （给定日期 | 当前日期） n 月 的日期\r\n     * @param { Number } n ：前进（+） 后退（-）n 月后的日期\r\n     * @param { String | Number } dt dt ：日期 或 时间戳\r\n     */\r\n    getGapMonthDate(n,dt) {\r\n        let d = Rdate._dt(dt);\r\n        d.setMonth(d.getMonth() + n);\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n    /**\r\n     * 获取当前日期所在周任意星期对应的日期 ,比如我想知道这周5的日期你能告诉我吗？这个函数 就可以告诉你\r\n     * @param { Number } week ：星期\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getWeekByDate(week,dt) {\r\n        if(!arguments.length) throw('缺少参数week！')\r\n        // 获取日期时间\r\n        let d = Rdate._dt(dt)\r\n        //统一：用户传入 0 或 7 都是星期日\r\n        let w =week === 0? 7 : week\r\n        let i = d.getDay()===0?7:d.getDay()\r\n        if(w==i){//如果传入的星期和日期对应的星期一致，就直接返回该传入的日期\r\n            return this.format(d,'yyyy-MM-dd')\r\n        }else{\r\n            d.setDate(d.getDate() - (i - w));\r\n            return this.format(d,'yyyy-MM-dd')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取（给定日期 | 当前日期） 所在对应月份的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getMonthWeek(dt) {\r\n        let dd = Rdate._dt(dt);\r\n        let date = new Date(dd.getFullYear(), dd.getMonth(), dd.getDate()),\r\n            w = date.getDay(),\r\n            d = date.getDate();\r\n        if (w == 0) w = 7;\r\n        return {\r\n            getMonth: date.getMonth() + 1,\r\n            getYear: date.getFullYear(),\r\n            getWeek: Math.ceil((d + 6 - w) / 7),\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期） 所在对应年份的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getYearWeek(dt) {\r\n        let dd = Rdate._dt(dt)\r\n        let d1 = new Date(dd.getFullYear(), dd.getMonth(), dd.getDate()),\r\n            d2 = new Date(dd.getFullYear(), 0, 1),\r\n            d = Math.round((d1 - d2) / 86400000);\r\n        return Math.ceil((d + ((d2.getDay() + 1) - 1)) / 7);\r\n    }\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期） 对应的回显星期\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     * @param {String} prefix :前缀\r\n     */\r\n    week(dt=new Date(),prefix='星期'){\r\n        let d = Rdate._dt(dt)\r\n        return prefix+['日','一','二','三','四','五','六'][d.getDay()]\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期） 对应的回显月份\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     * @param {String} suffix ：后缀\r\n     */\r\n    month(dt=new Date(),suffix='月'){\r\n        let d = Rdate._dt(dt)\r\n        return ['一','二','三','四','五','六','七','八','九','十','十一','十二'][d.getMonth()] + suffix\r\n    }\r\n\r\n    /**\r\n     * 获取 (给定日期 | 当前日期) 在对应的年份 | 月份 | 季度 中属于的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    weekInfo(dt) {\r\n        let getMonthWeek = function (a, b, c) {\r\n            var date = new Date(a, parseInt(b) - 1, c),w = date.getDay(),d = date.getDate();\r\n            return Math.ceil((d + 6 - w) / 7);\r\n        }\r\n        let getYearWeek = function (a, b, c) {\r\n            var date1 = new Date(a, parseInt(b) - 1, c),\r\n                date2 = new Date(a, 0, 1),\r\n                d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\r\n            return Math.ceil((d + ((date2.getDay() + 1) - 1)) / 7);\r\n        }\r\n        let today = Rdate._dt(dt)\r\n        let y = today.getFullYear();\r\n        let m = today.getMonth() + 1;\r\n        let d = today.getDate();\r\n        let quarter = \"\";\r\n        let week=\"\"\r\n        let result = getYearWeek(y, m, d);\r\n        if (m < 4) {\r\n            quarter = 1;\r\n            week = result;\r\n        } else if (m < 7) {\r\n            quarter = 2;\r\n            week = result - getYearWeek(y, 4, 1);\r\n            var day = new Date(y, 4, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        } else if (m < 10) {\r\n            quarter = 3;\r\n            week = result - getYearWeek(y, 7, 1);\r\n            var day = new Date(y, 7, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        } else {\r\n            quarter = 4;\r\n            week = result - getYearWeek(y, 10, 1);\r\n            var day = new Date(y, 10, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        }\r\n        return {\r\n            year:y+'-'+m+'-'+d,\r\n            yearWeek: getYearWeek(y, m, d),\r\n            month:m,\r\n            monthWeek: getMonthWeek(y, m, d),\r\n            quarter,\r\n            quarterWeek:week\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期）  所在周的起止日期\r\n     * @param {String | Number} dt ：日期 或 时间戳\r\n     */\r\n    getWeek(dt) {\r\n        let dd = Rdate._dt(dt)\r\n        let week = dd.getDay(); //获取时间的星期数\r\n        let minus = week ? week - 1 : 6;\r\n        dd.setDate(dd.getDate() - minus); //获取minus天前的日期\r\n        let start = this.format(dd,\"yyyy-MM-dd\")\r\n        dd.setDate(dd.getDate() + 6);\r\n        let end = this.format(dd,\"yyyy-MM-dd\")\r\n        return {start,end}\r\n    }\r\n\r\n    /**\r\n     * 星期回显\r\n     * \r\n     *  @param {String | Number}  i: 回显对应的数字\r\n     *  @param {String}  invalidTip: 传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n     * \r\n     */\r\n    previewWeek(i,prefix=\"周\",invalidTip){\r\n        return i>0&&i<8?prefix+['一','二','三','四','五','六','日'][i-1]:invalidTip===undefined? 'Invalid week':invalidTip\r\n    }\r\n\r\n    /**\r\n     * 月份回显\r\n     * @param { String | Number} i ：回显对应的数字\r\n     * @param { String } invalidTip  ：传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n     * @return String\r\n     */\r\n    previewMonth(i,invalidTip){\r\n        return i>0&&i<13? ['一','二','三','四','五','六','七','八','九','十','十一','十二'][i-1]+'月':invalidTip===undefined? 'Invalid month':invalidTip\r\n    }\r\n\r\n\r\n    /**\r\n     * 生成 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n     * @param {Number} days 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n     * @param {Boolean} s 指定时间\r\n     * @return 日期数组\r\n     */\r\n    getPassDaysDate(days,s)  {\r\n        if(!arguments.length)return [];\r\n        return [...Array(days*1+1).keys()].map(days=>new Date((s?new Date(s):Date.now()) - 86400000 * days).toLocaleDateString()).map(item=>item.split(/\\/|-/).map(i=>i.padStart(2,'0')).join('-')).splice(1)\r\n    }\r\n\r\n    /**\r\n     * --------------时间信息相关-------------------end----------------------------------------------\r\n     */\r\n\r\n\r\n    /**\r\n     * --------------验证相关-------------------start----------------------------------------------\r\n     */\r\n\r\n     /**\r\n     * 是否是润年\r\n     * @param { String } year ：年份\r\n     */\r\n    isLeapYear(year) {\r\n        return !(year % (year % 100 ? 4 : 400));\r\n    }\r\n\r\n    /**\r\n     * 判断时间（时分秒）格式是否有效\r\n     * @param { String } str ：时分秒\r\n     */\r\n    isTime(str) {\r\n        var a = str.match(/^(\\d{1,2})(:)?(\\d{1,2})\\2(\\d{1,2})$/);\r\n        if (a == null) {\r\n            return false;\r\n        }\r\n        if (a[1] >= 24 || a[3] >= 60 || a[4] >= 60) {\r\n            return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断日期（年月日）格式是否有效\r\n     * @param {String} str ：年月日\r\n     */\r\n    isDateTime(str) {\r\n        let result = str.match(/^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/);\r\n        if (result == null) return false;\r\n        let d = new Date(result[1], result[3] - 1, result[4]);\r\n        return (d.getFullYear() == result[1] && d.getMonth() + 1 == result[3] && d.getDate() == result[4]);\r\n    }\r\n\r\n    /**\r\n     * 判断 完整的年月日时分秒格式是否有效\r\n     * @param { String } str ：年月日时分秒\r\n     */\r\n    isAllDateTime(str) {\r\n        let result = str.match(/^(\\d{4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$/);\r\n        if (result == null) return false;\r\n        let d = new Date(result[1], result[3] - 1, result[4], result[5], result[6], result[7]);\r\n        return (d.getFullYear() == result[1] && (d.getMonth() + 1) == result[3] && d.getDate() == result[4] && d.getHours() == result[5] && d.getMinutes() == result[6] && d.getSeconds() == result[7]);\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证一个日期是不是今天\r\n     * @param { String } dt： 日期\r\n     */\r\n    isToday(dt) {\r\n        return new Date().toLocaleDateString() == new Date(dt.replace(/-/g,'/')).toLocaleDateString();\r\n    }\r\n    /**\r\n     * 验证传入的日期是否是昨天\r\n     * @param {*} val \r\n     */\r\n    isYesterday(dt) {\r\n        let yesterday = new Date(new Date() - 1000 * 60 * 60 * 24);\r\n        let test = new Date(dt);\r\n        if (yesterday.getYear() === test.getYear() && yesterday.getMonth() === test.getMonth() && yesterday.getDate() === test.getDate()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // 验证日期大小\r\n    compareDate(d1, d2) {\r\n        return ((new Date(d1.replace(/-/g, \"/\"))) < (new Date(d2.replace(/-/g, \"/\"))));\r\n    }\r\n\r\n     /**\r\n     * --------------验证相关-------------------end----------------------------------------------\r\n     */\r\n\r\n\r\n     /**\r\n      * 新增 方法-----------------------------------------------------------------------\r\n      */\r\n\r\n    /**\r\n     * 计算两个日期间所有日期，以数组形式返回\r\n     * 新增时间：2020/8/23\r\n     * @param { string | number } startDate : 开始日期（13位时间戳 | 字符串日期）\r\n     * @param { string | number } endDate ：结束日期（13位时间戳 | 字符串日期）\r\n     * @return 日期间所有日期，以数组形式返回\r\n     */\r\n    getGapDates(startDate,endDate){\r\n        // 如果开始日期都没有，直接返回 []\r\n        if(!startDate)return []\r\n        // 辅助函数\r\n        let helper = (s,i) => new Date((+new Date(s)+ i*86400000)).toLocaleDateString().replace(/\\//g,'-')\r\n        // 开始日期时间戳\r\n        let startDateStamp = +new Date(new Date(startDate).toLocaleDateString())\r\n        // 结束日期时间戳\r\n        let endDateStamp = endDate? +new Date(new Date(endDate).toLocaleDateString()) : +new Date(new Date().toLocaleDateString())\r\n        // 如果两者相等\r\n        if(startDateStamp===endDateStamp)return [ helper(new Date(endDate?new Date():startDate),0) ]\r\n        // 获取最小的日期作为开始日期\r\n        startDate = startDateStamp<endDateStamp?new Date(startDateStamp):new Date(endDate?endDateStamp:+new Date())\r\n        // 获取最大的日期作为结束日期\r\n        endDate= startDateStamp<endDateStamp?new Date(endDate?endDateStamp :+new Date()):new Date(startDateStamp)\r\n        // 计算相差天数\r\n        let gapDays = parseInt(Math.abs(startDateStamp - endDateStamp) / 86400000) +1\r\n        // 返回结果\r\n        return Array(gapDays).fill(0).reduce((p,c,i)=>[...p,helper(startDate,i)],[])\r\n    } \r\n\r\n\r\n     /**\r\n      * 计算 当前时辰 或 指定时间 （年月日时分秒）\r\n      * \r\n      * 凌晨0：00－6：00，\r\n      * 早上 6：00-8:00；\r\n      * 上午 8：00-12：00，上午是指8-12点工作时间\r\n      * 中午12：00-14：00,中午是指12-14点午休时间\r\n      * 下午14：00-18：00，下午是指14-18点下午工作时间\r\n      * 晚上18：00-21：00；\r\n      * 深夜：21：00-24：00\r\n      *\r\n      * @param { string | number } dt ：指定时间\r\n      */\r\n    when(dt) {\r\n        let hour = Rdate._dt(dt).getHours()\r\n        return ['凌晨', '早上', '上午', '中午', '下午', '晚上', '深夜'][\r\n            hour >= 0 && hour <= 6 ? 0 :\r\n            hour > 6 && hour <= 8 ? 1 :\r\n            hour > 8 && hour <= 12 ? 2 :\r\n            hour > 12 && hour <= 14 ? 3 :\r\n            hour > 14 && hour <= 18 ? 4 :\r\n            hour > 18 && hour <= 21 ? 5 :6\r\n        ]\r\n    }\r\n}\r\n\r\nexport default Rdate"],"names":["Rdate","version","author","creator","createDate","updateDate","args","a","b","dt","format","length","Date","isNaN","valueOf","replace","ret","String","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","mapVal","push","slice","includes","week","when","k","substr","RegExp","formatArr","split","res","i","n","arguments","getTime","undefined","d","_dt","setDate","before","after","start","end","stamp1","stamp2","parseInt","Math","abs","f","getDay","getCurWeekFirstDay","setMonth","d1","d2","setFullYear","w","dd","date","getYear","getWeek","ceil","round","prefix","suffix","getMonthWeek","c","getYearWeek","date1","date2","today","y","m","quarter","result","day","year","yearWeek","month","monthWeek","quarterWeek","minus","invalidTip","days","s","Array","keys","map","now","toLocaleDateString","item","join","splice","str","match","yesterday","test","startDate","endDate","helper","startDateStamp","endDateStamp","gapDays","fill","reduce","p","hour","indexOf","index","index1","index2","index3","lastIndexOf","index4"],"mappings":"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"}