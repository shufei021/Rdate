{"version":3,"file":"rdate.js","sources":["../src/index.js"],"sourcesContent":["class Rdate {\r\n    constructor() {\r\n        this.version = \"1.0.1\"\r\n        this.author = 'rookie_fly'\r\n        this.creator ='rookie_fly'\r\n        this.createDate ='2018-07-27'\r\n        this.updateDate = '2020-08-22'\r\n    }\r\n\r\n    /**\r\n     * ---------------核心方法--------------------\r\n     *                                           \r\n     * \r\n     */\r\n\r\n     /**\r\n      * ※ 完结：不会再改\r\n      * @param  {...any} args :形参，生效的最多为前两个参数\r\n      * 1个参数情况：\r\n      *      1.1 参数为格式，则默认格式化当前时间\r\n      *      1.2 参数为时间戳或字符串时间，则使用默认格式去格式化化给定的 时间戳或字符串时间\r\n      * 2个参数情况：\r\n      * 第一个参数表示格式化的日期，可以是时间戳或字符串时间\r\n      * 第二个参数表示格式\r\n      */\r\n     format(...args) {\r\n        let [a,b] = args,dt,format\r\n        if(!args.length){\r\n            dt = new Date()\r\n            format = 'yyyy-MM-dd hh:mm:ss'\r\n        }else if(args.length==1){\r\n            if(isNaN (new Date(a).valueOf())){\r\n                format = a\r\n                dt = new Date()\r\n            }else{\r\n                dt = new Date(typeof a == 'string'?a.replace(/-/g,'/'):a)\r\n                format = 'yyyy-MM-dd hh:mm:ss'\r\n            }\r\n        }else if(args.length>=2){\r\n            dt = new Date(typeof a == 'string'?a.replace(/-/g,'/'):a)\r\n            format = b\r\n        }\r\n        let ret = {\r\n            \"y+\": String(dt.getFullYear()),\r\n            \"M+\": String((dt.getMonth() + 1)).padStart(2, 0),\r\n            \"d+\": String(dt.getDate()).padStart(2, 0),\r\n            \"h+\": String(dt.getHours()).padStart(2, 0),\r\n            \"m+\": String(dt.getMinutes()).padStart(2, 0),\r\n            \"s+\": String(dt.getSeconds()).padStart(2, 0),\r\n        }\r\n        for (let k in ret) {\r\n            if (format.includes(k.substr(0, 1))) {\r\n                format = format.replace(new RegExp(k, \"g\"), i => ret[k].substr(0, i.length))\r\n            }\r\n        }\r\n        return format\r\n    }\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * Rdate 的静态方法\r\n     * 用于 根据参数获取时间 的兼容：输入日期\r\n     * 第1种情况：用户没有传参数，即 dt === undefined，此时返回当前日期时间\r\n     * 第2种情况：用户传参数不符合规定（标准的时间戳和日期），此时返回当前日期时间\r\n     * 第3种情况：用户传参数符合规定（标准的时间戳和日期），此时返回给定日期\r\n     */\r\n    static _dt(dt){\r\n        return dt?new Date(typeof dt == 'string' && dt.indexOf('-')>-1?dt.replace(/-/g,'/'):dt):new Date()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     *                                           \r\n     * ---------------核心方法--------------------\r\n     */\r\n\r\n\r\n\r\n     /**\r\n      * --------------时间戳相关-------------------start----------------------------------------------\r\n      */\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 获取 （给定日期 | 当前日期） 前进（+）后退（-）n 天后的时间戳\r\n     * @param { Number } n : 前进（+）后退（-）n 天后的时间戳，不传默认是0，当天\r\n     * @param { String } dt : 给定日期\r\n     */\r\n\r\n    getStamp(dt,n){\r\n        let a = arguments\r\n        if(!a.length) return new Date().getTime()\r\n        // 如果只有 一个参数,则视为对当前时间的加减\r\n        if(a.length==1 && typeof a[0] === \"number\"){\r\n            n = a[0]\r\n            dt = undefined\r\n        }\r\n        let d=Rdate._dt(dt)\r\n        d.setDate(d.getDate() + (n === undefined ? 0 : n))\r\n        return +d\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 获取基于 （给定日期/当前时间） 的 前一天/后一天的时间戳\r\n     * @param  { String } dt : 给定日期\r\n     */\r\n    getStampBeforAfter(dt) {\r\n        let d = Rdate._dt(dt),b,a \r\n        d.setDate(d.getDate()-1)\r\n        b=+d\r\n        d.setDate(d.getDate()+2)\r\n        a = +d\r\n        return {before:b,after:a}   \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 定日期/今日 起止日期时间（00：00：00 ~ 23：59：59）\r\n     * @param { String } dt: 给定日期\r\n     */\r\n    getStampStartEnd(dt) {\r\n        let d = Rdate._dt(dt)\r\n        return {\r\n            start:+new Date(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0) ,\r\n            end:+new Date(d.getFullYear(),d.getMonth(),d.getDate(),23,59,59)\r\n        } \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 获取两个时间戳相差多少天\r\n     * @param { Number } stamp1 ：时间戳\r\n     * @param { Number } stamp2 ：时间戳\r\n     */\r\n    getDaysByStamp(stamp1, stamp2) {\r\n        return parseInt(Math.abs(stamp1 - stamp2) / 86400000)\r\n    }\r\n\r\n      /**\r\n      * --------------时间戳相关-------------------end----------------------------------------------\r\n      */\r\n\r\n\r\n     /**\r\n      * --------------时间信息相关-------------------start----------------------------------------------\r\n      */\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 本周第一天\r\n     * @param { String } format ：格式，默认 yyyy-MM-dd\r\n     */\r\n    getCurWeekFirstDay() {\r\n        let d = new Date();\r\n        let f = new Date(d - (d.getDay() - 1) * 86400000);\r\n        return this.format(f,'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n     /**\r\n      * ※ 完结：不会再改\r\n     * 本周最后一天\r\n     */\r\n    getCurWeekLastDay() {\r\n        let d = new Date(this.getCurWeekFirstDay()+' 00:00:00')\r\n        d.setDate(d.getDate()+6)\r\n        return this.format(d,'yyyy-MM-dd') \r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 任一月份第一天\r\n     */\r\n    getMonthFirstDay(dt) {\r\n        let d = Rdate._dt(dt)\r\n        return this.format(d,'yyyy-MM-')+'01'\r\n    }\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 任一月份最后一天\r\n     * @param { String | Number} dt ：日期 或 时间戳\r\n     */\r\n    getMonthLastDay(dt) {\r\n        let d = Rdate._dt(dt)\r\n        d.setMonth(d.getMonth() + 1)//月份+1\r\n        d.setDate(1)//日设置成1号\r\n        d.setDate(d.getDate() -1)//倒退1日到当前月末最后一天\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 获取两个日期相差多少天\r\n     * @param {String | Number} d1 ：日期 或 时间戳\r\n     * @param {String | Number} d2 ：日期 或 时间戳\r\n     */\r\n    getDaysByDate(d1, d2) {\r\n        return parseInt(Math.abs(new Date(d1) - new Date(d2)) / 86400000)\r\n    }\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 获取 （给定日期 | 当前日期）为基准的 半年之前的日期\r\n     * @param { String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getHalfYear(dt) {\r\n        return this.format(new Date(Rdate._dt(dt)-15768000000),'yyyy-MM-dd')\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * ※ 完结：不会再改\r\n     * 距 （给定日期|当前日期） n 年 的日期\r\n     * @param { Number } n ：前进（+） 后退（-）n 年后的日期\r\n     * @param { String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getGapYearDate(n=0,dt) {\r\n        let d = Rdate._dt(dt);\r\n        d.setFullYear(d.getFullYear() + n);\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n    /**\r\n     * ※ \r\n     * 距 （给定日期 | 当前日期） n 月 的日期\r\n     * @param { Number } n ：前进（+） 后退（-）n 月后的日期\r\n     * @param { String | Number } dt dt ：日期 或 时间戳\r\n     */\r\n    getGapMonthDate(n,dt) {\r\n        let d = Rdate._dt(dt);\r\n        d.setMonth(d.getMonth() + n);\r\n        return this.format(d,'yyyy-MM-dd')\r\n    }\r\n\r\n    /**\r\n     * 获取当前日期所在周任意星期对应的日期 ,比如我想知道这周5的日期你能告诉我吗？这个函数 就可以告诉你\r\n     * @param { Number } week ：星期\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getWeekByDate(week,dt) {\r\n        if(!arguments.length) throw('缺少参数week！')\r\n        // 获取日期时间\r\n        let d = Rdate._dt(dt)\r\n        //统一：用户传入 0 或 7 都是星期日\r\n        let w =week === 0? 7 : week\r\n        let i = d.getDay()===0?7:d.getDay()\r\n        if(w==i){//如果传入的星期和日期对应的星期一致，就直接返回该传入的日期\r\n            return this.format(d,'yyyy-MM-dd')\r\n        }else{\r\n            d.setDate(d.getDate() - (i - w));\r\n            return this.format(d,'yyyy-MM-dd')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取（给定日期 | 当前日期） 所在对应月份的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getMonthWeek(dt) {\r\n        let dd = Rdate._dt(dt);\r\n        let date = new Date(dd.getFullYear(), dd.getMonth(), dd.getDate()),\r\n            w = date.getDay(),\r\n            d = date.getDate();\r\n        if (w == 0) w = 7;\r\n        return {\r\n            getMonth: date.getMonth() + 1,\r\n            getYear: date.getFullYear(),\r\n            getWeek: Math.ceil((d + 6 - w) / 7),\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期） 所在对应年份的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    getYearWeek(dt) {\r\n        let dd = Rdate._dt(dt)\r\n        let d1 = new Date(dd.getFullYear(), dd.getMonth(), dd.getDate()),\r\n            d2 = new Date(dd.getFullYear(), 0, 1),\r\n            d = Math.round((d1 - d2) / 86400000);\r\n        return Math.ceil((d + ((d2.getDay() + 1) - 1)) / 7);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取 (给定日期 | 当前日期) 在对应的年份 | 月份 | 季度 中属于的第几周\r\n     * @param {String | Number } dt ：日期 或 时间戳\r\n     */\r\n    weekInfo(dt) {\r\n        let getMonthWeek = function (a, b, c) {\r\n            var date = new Date(a, parseInt(b) - 1, c),w = date.getDay(),d = date.getDate();\r\n            return Math.ceil((d + 6 - w) / 7);\r\n        }\r\n        let getYearWeek = function (a, b, c) {\r\n            var date1 = new Date(a, parseInt(b) - 1, c),\r\n                date2 = new Date(a, 0, 1),\r\n                d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\r\n            return Math.ceil((d + ((date2.getDay() + 1) - 1)) / 7);\r\n        }\r\n        let today = Rdate._dt(dt)\r\n        let y = today.getFullYear();\r\n        let m = today.getMonth() + 1;\r\n        let d = today.getDate();\r\n        let quarter = \"\";\r\n        let week=\"\"\r\n        let result = getYearWeek(y, m, d);\r\n        if (m < 4) {\r\n            quarter = 1;\r\n            week = result;\r\n        } else if (m < 7) {\r\n            quarter = 2;\r\n            week = result - getYearWeek(y, 4, 1);\r\n            var day = new Date(y, 4, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        } else if (m < 10) {\r\n            quarter = 3;\r\n            week = result - getYearWeek(y, 7, 1);\r\n            var day = new Date(y, 7, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        } else {\r\n            quarter = 4;\r\n            week = result - getYearWeek(y, 10, 1);\r\n            var day = new Date(y, 10, 1);\r\n            if (day.getDay() > 1) {\r\n                week += 1;\r\n            }\r\n        }\r\n        return {\r\n            year:y+'-'+m+'-'+d,\r\n            yearWeek: getYearWeek(y, m, d),\r\n            month:m,\r\n            monthWeek: getMonthWeek(y, m, d),\r\n            quarter,\r\n            quarterWeek:week\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 获取 （给定日期 | 当前日期）  所在周的起止日期\r\n     * @param {String | Number} dt ：日期 或 时间戳\r\n     */\r\n    getWeek(dt) {\r\n        let dd = Rdate._dt(dt)\r\n        let week = dd.getDay(); //获取时间的星期数\r\n        let minus = week ? week - 1 : 6;\r\n        dd.setDate(dd.getDate() - minus); //获取minus天前的日期\r\n        let start = this.format(dd,\"yyyy-MM-dd\")\r\n        dd.setDate(dd.getDate() + 6);\r\n        let end = this.format(dd,\"yyyy-MM-dd\")\r\n        return {start,end}\r\n    }\r\n\r\n     /**\r\n     * \r\n     * @param {String | Number} startDate : 开始的日期 （日期 或 时间戳）\r\n     * @param {String | Number} endDate : 结束的日期 （日期 或 时间戳）\r\n     */\r\n    getDiffDate(startDate,endDate){\r\n        if(!startDate)return this.format('yyyy-MM-dd')\r\n        let end = endDate || this.format('yyyy-MM-dd')\r\n        let diff = parseInt(Math.abs(new Date(startDate.split(' ')[0]+' 00:00:00') - new Date(end.split(' ')[0]+' 00:00:00'))/1000/24/60/60)+1\r\n        return Array(diff).fill(0).reduce((p,c,i)=>[...p,this.format(this.getStamp(startDate)+i*86400000,'yyyy-MM-dd')],[])\r\n    }\r\n\r\n\r\n    /**\r\n     * 星期回显\r\n     * \r\n     *  @param {String | Number}  i: 回显对应的数字\r\n     *  @param {String}  invalidTip: 传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n     * \r\n     */\r\n    previewWeek(i,prefix=\"周\",invalidTip){\r\n        return i>0&&i<8?prefix+['一','二','三','四','五','六','日'][i-1]:invalidTip===undefined? 'Invalid week':invalidTip\r\n    }\r\n\r\n    /**\r\n     * 月份回显\r\n     * @param { String | Number} i ：回显对应的数字\r\n     * @param { String } invalidTip  ：传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n     * @return String\r\n     */\r\n    previewMonth(i,invalidTip){\r\n        return i>0&&i<13? ['一','二','三','四','五','六','七','八','九','十','十一','十二'][i-1]+'月':invalidTip===undefined? 'Invalid month':invalidTip\r\n    }\r\n\r\n\r\n    /**\r\n     * 生成 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n     * @param {Number} days 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n     * @param {Boolean} s 指定时间\r\n     * @return 日期数组\r\n     */\r\n    getPassDaysDate(days,s)  {\r\n        if(!arguments.length)return [];\r\n        return [...Array(days*1+1).keys()].map(days=>new Date((s?new Date(s):Date.now()) - 86400000 * days).toLocaleDateString()).map(item=>item.split(/\\/|-/).map(i=>i.padStart(2,'0')).join('-')).splice(1)\r\n    }\r\n\r\n    /**\r\n     * --------------时间信息相关-------------------end----------------------------------------------\r\n     */\r\n\r\n\r\n    /**\r\n     * --------------验证相关-------------------start----------------------------------------------\r\n     */\r\n\r\n     /**\r\n     * 是否是润年\r\n     * @param { String } year ：年份\r\n     */\r\n    isLeapYear(year) {\r\n        return !(year % (year % 100 ? 4 : 400));\r\n    }\r\n\r\n    /**\r\n     * 判断时间（时分秒）格式是否有效\r\n     * @param { String } str ：时分秒\r\n     */\r\n    isTime(str) {\r\n        var a = str.match(/^(\\d{1,2})(:)?(\\d{1,2})\\2(\\d{1,2})$/);\r\n        if (a == null) {\r\n            return false;\r\n        }\r\n        if (a[1] >= 24 || a[3] >= 60 || a[4] >= 60) {\r\n            return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断日期（年月日）格式是否有效\r\n     * @param {String} str ：年月日\r\n     */\r\n    isDateTime(str) {\r\n        let result = str.match(/^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/);\r\n        if (result == null) return false;\r\n        let d = new Date(result[1], result[3] - 1, result[4]);\r\n        return (d.getFullYear() == result[1] && d.getMonth() + 1 == result[3] && d.getDate() == result[4]);\r\n    }\r\n\r\n    /**\r\n     * 判断 完整的年月日时分秒格式是否有效\r\n     * @param { String } str ：年月日时分秒\r\n     */\r\n    isAllDateTime(str) {\r\n        let result = str.match(/^(\\d{4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$/);\r\n        if (result == null) return false;\r\n        let d = new Date(result[1], result[3] - 1, result[4], result[5], result[6], result[7]);\r\n        return (d.getFullYear() == result[1] && (d.getMonth() + 1) == result[3] && d.getDate() == result[4] && d.getHours() == result[5] && d.getMinutes() == result[6] && d.getSeconds() == result[7]);\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证一个日期是不是今天\r\n     * @param { String } dt： 日期\r\n     */\r\n    isToday(dt) {\r\n        return new Date().toLocaleDateString() == new Date(dt.replace(/-/g,'/')).toLocaleDateString();\r\n    }\r\n    /**\r\n     * 验证传入的日期是否是昨天\r\n     * @param {*} val \r\n     */\r\n    isYesterday(dt) {\r\n        let yesterday = new Date(new Date() - 1000 * 60 * 60 * 24);\r\n        let test = new Date(dt);\r\n        if (yesterday.getYear() === test.getYear() && yesterday.getMonth() === test.getMonth() && yesterday.getDate() === test.getDate()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // 验证日期大小\r\n    compareDate(d1, d2) {\r\n        return ((new Date(d1.replace(/-/g, \"/\"))) < (new Date(d2.replace(/-/g, \"/\"))));\r\n    }\r\n\r\n     /**\r\n     * --------------验证相关-------------------end----------------------------------------------\r\n     */\r\n}\r\n\r\nconst rdate = new Rdate()\r\n\r\nexport default rdate"],"names":["Rdate","version","author","creator","createDate","updateDate","args","a","b","dt","format","length","Date","isNaN","valueOf","replace","ret","String","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","k","includes","substr","RegExp","i","n","arguments","getTime","undefined","d","_dt","setDate","before","after","start","end","stamp1","stamp2","parseInt","Math","abs","f","getDay","getCurWeekFirstDay","setMonth","d1","d2","setFullYear","week","w","dd","date","getYear","getWeek","ceil","round","getMonthWeek","c","getYearWeek","date1","date2","today","y","m","quarter","result","day","year","yearWeek","month","monthWeek","quarterWeek","minus","startDate","endDate","diff","split","Array","fill","reduce","p","getStamp","prefix","invalidTip","days","s","keys","map","now","toLocaleDateString","item","join","splice","str","match","yesterday","test","indexOf","rdate"],"mappings":"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"}